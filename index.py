# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'FantasyCricket.ui'
#
# Created by: PyQt5 UI code generator 5.15.0
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(771, 657)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.centralwidget)
        self.verticalLayout.setObjectName("verticalLayout")
        self.horizontalLayout_8 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_8.setObjectName("horizontalLayout_8")
        self.lbl1 = QtWidgets.QLabel(self.centralwidget)
        font = QtGui.QFont()
        font.setFamily("Arial")
        self.lbl1.setFont(font)
        self.lbl1.setObjectName("lbl1")
        self.horizontalLayout_8.addWidget(self.lbl1)
        self.verticalLayout.addLayout(self.horizontalLayout_8)
        self.horizontalLayout_7 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_7.setObjectName("horizontalLayout_7")
        self.lbl2 = QtWidgets.QLabel(self.centralwidget)
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setBold(True)
        font.setWeight(75)
        self.lbl2.setFont(font)
        self.lbl2.setObjectName("lbl2")
        self.horizontalLayout_7.addWidget(self.lbl2)
        self.le1 = QtWidgets.QLineEdit(self.centralwidget)
        self.le1.setObjectName("le1")
        self.horizontalLayout_7.addWidget(self.le1)
        spacerItem = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_7.addItem(spacerItem)
        self.lbl3 = QtWidgets.QLabel(self.centralwidget)
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setBold(True)
        font.setWeight(75)
        self.lbl3.setFont(font)
        self.lbl3.setObjectName("lbl3")
        self.horizontalLayout_7.addWidget(self.lbl3)
        self.le2 = QtWidgets.QLineEdit(self.centralwidget)
        self.le2.setObjectName("le2")
        self.horizontalLayout_7.addWidget(self.le2)
        spacerItem1 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_7.addItem(spacerItem1)
        self.lbl4 = QtWidgets.QLabel(self.centralwidget)
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setBold(True)
        font.setWeight(75)
        self.lbl4.setFont(font)
        self.lbl4.setObjectName("lbl4")
        self.horizontalLayout_7.addWidget(self.lbl4)
        self.le3 = QtWidgets.QLineEdit(self.centralwidget)
        self.le3.setEnabled(True)
        self.le3.setObjectName("le3")
        self.horizontalLayout_7.addWidget(self.le3)
        spacerItem2 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_7.addItem(spacerItem2)
        self.lbl5 = QtWidgets.QLabel(self.centralwidget)
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setBold(True)
        font.setWeight(75)
        self.lbl5.setFont(font)
        self.lbl5.setObjectName("lbl5")
        self.horizontalLayout_7.addWidget(self.lbl5)
        self.le4 = QtWidgets.QLineEdit(self.centralwidget)
        self.le4.setObjectName("le4")
        self.horizontalLayout_7.addWidget(self.le4)
        self.verticalLayout.addLayout(self.horizontalLayout_7)
        self.horizontalLayout_9 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_9.setObjectName("horizontalLayout_9")
        self.line = QtWidgets.QFrame(self.centralwidget)
        self.line.setFrameShape(QtWidgets.QFrame.HLine)
        self.line.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line.setObjectName("line")
        self.horizontalLayout_9.addWidget(self.line)
        self.verticalLayout.addLayout(self.horizontalLayout_9)
        self.horizontalLayout_5 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_5.setObjectName("horizontalLayout_5")
        self.lbl6 = QtWidgets.QLabel(self.centralwidget)
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setBold(True)
        font.setWeight(75)
        self.lbl6.setFont(font)
        self.lbl6.setObjectName("lbl6")
        self.horizontalLayout_5.addWidget(self.lbl6)
        self.le5 = QtWidgets.QLineEdit(self.centralwidget)
        self.le5.setObjectName("le5")
        self.horizontalLayout_5.addWidget(self.le5)
        spacerItem3 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_5.addItem(spacerItem3)
        self.lbl7 = QtWidgets.QLabel(self.centralwidget)
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setBold(True)
        font.setWeight(75)
        self.lbl7.setFont(font)
        self.lbl7.setObjectName("lbl7")
        self.horizontalLayout_5.addWidget(self.lbl7)
        self.le6 = QtWidgets.QLineEdit(self.centralwidget)
        self.le6.setObjectName("le6")
        self.horizontalLayout_5.addWidget(self.le6)
        self.verticalLayout.addLayout(self.horizontalLayout_5)
        self.horizontalLayout_10 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_10.setObjectName("horizontalLayout_10")
        self.line_2 = QtWidgets.QFrame(self.centralwidget)
        self.line_2.setFrameShape(QtWidgets.QFrame.HLine)
        self.line_2.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_2.setObjectName("line_2")
        self.horizontalLayout_10.addWidget(self.line_2)
        self.verticalLayout.addLayout(self.horizontalLayout_10)
        self.horizontalLayout_4 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_4.setObjectName("horizontalLayout_4")
        self.rbtn1 = QtWidgets.QRadioButton(self.centralwidget)
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setBold(True)
        font.setWeight(75)
        self.rbtn1.setFont(font)
        self.rbtn1.setObjectName("rbtn1")
        self.horizontalLayout_4.addWidget(self.rbtn1)
        self.rbtn1.toggled.connect(self.ctgr)
        self.rbtn2 = QtWidgets.QRadioButton(self.centralwidget)
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setBold(True)
        font.setWeight(75)
        self.rbtn2.setFont(font)
        self.rbtn2.setObjectName("rbtn2")
        self.horizontalLayout_4.addWidget(self.rbtn2)
        self.rbtn2.toggled.connect(self.ctgr)
        self.rbtn3 = QtWidgets.QRadioButton(self.centralwidget)
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setBold(True)
        font.setWeight(75)
        self.rbtn3.setFont(font)
        self.rbtn3.setObjectName("rbtn3")
        self.horizontalLayout_4.addWidget(self.rbtn3)
        self.rbtn3.toggled.connect(self.ctgr)
        self.rbtn4 = QtWidgets.QRadioButton(self.centralwidget)
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setBold(True)
        font.setWeight(75)
        self.rbtn4.setFont(font)
        self.rbtn4.setObjectName("rbtn4")
        self.horizontalLayout_4.addWidget(self.rbtn4)
        self.rbtn4.toggled.connect(self.ctgr)
        self.rbtn1.setHidden(True)
        self.rbtn2.setHidden(True)
        self.rbtn3.setHidden(True)
        self.rbtn4.setHidden(True)
        spacerItem4 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_4.addItem(spacerItem4)
        self.lbl8 = QtWidgets.QLabel(self.centralwidget)
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setBold(True)
        font.setWeight(75)
        self.lbl8.setFont(font)
        self.lbl8.setObjectName("lbl8")
        self.horizontalLayout_4.addWidget(self.lbl8)
        self.le7 = QtWidgets.QLineEdit(self.centralwidget)
        self.le7.setObjectName("le7")
        self.horizontalLayout_4.addWidget(self.le7)
        self.verticalLayout.addLayout(self.horizontalLayout_4)
        self.horizontalLayout_3 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_3.setObjectName("horizontalLayout_3")
        self.list1 = QtWidgets.QListWidget(self.centralwidget)
        self.list1.setObjectName("list1")
        self.horizontalLayout_3.addWidget(self.list1)
        self.list1.itemDoubleClicked.connect(self.rlist1)
        spacerItem5 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_3.addItem(spacerItem5)
        self.list2 = QtWidgets.QListWidget(self.centralwidget)
        self.list2.setObjectName("list2")
        self.horizontalLayout_3.addWidget(self.list2)
        self.list2.itemDoubleClicked.connect(self.rlist2)
        self.verticalLayout.addLayout(self.horizontalLayout_3)
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 771, 26))
        self.menubar.setObjectName("menubar")
        self.menuManage_Teams = QtWidgets.QMenu(self.menubar)
        self.menuManage_Teams.setObjectName("menuManage_Teams")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.actionNew_Team = QtWidgets.QAction(MainWindow)
        self.actionNew_Team.setObjectName("actionNew_Team")
        self.actionOpen_Team = QtWidgets.QAction(MainWindow)
        self.actionOpen_Team.setCheckable(False)
        self.actionOpen_Team.setObjectName("actionOpen_Team")
        self.actionSave_Team = QtWidgets.QAction(MainWindow)
        self.actionSave_Team.setObjectName("actionSave_Team")
        self.actionExit = QtWidgets.QAction(MainWindow)
        self.actionExit.setMenuRole(QtWidgets.QAction.TextHeuristicRole)
        self.actionExit.setObjectName("actionExit")
        self.actionEvaluate_Team = QtWidgets.QAction(MainWindow)
        self.actionEvaluate_Team.setObjectName("actionEvaluate_Team")
        self.menuManage_Teams.addAction(self.actionNew_Team)
        self.menuManage_Teams.addAction(self.actionOpen_Team)
        self.menuManage_Teams.addSeparator()
        self.menuManage_Teams.addAction(self.actionSave_Team)
        self.menuManage_Teams.addAction(self.actionEvaluate_Team)
        self.menuManage_Teams.addSeparator()
        self.menuManage_Teams.addAction(self.actionExit)
        self.menubar.addAction(self.menuManage_Teams.menuAction())

        self.bat = 0
        self.bwl = 0
        self.ar = 0
        self.wk = 0
        self.avl = 1000
        self.used = 0

        self.retranslateUi(MainWindow)
        self.actionExit.triggered.connect(MainWindow.close)
        self.menuManage_Teams.triggered[QtWidgets.QAction].connect(self.menuactn)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.lbl1.setText(_translate("MainWindow", "Your Selections"))
        self.lbl2.setText(_translate("MainWindow", "Batsmen (BAT)"))
        self.lbl3.setText(_translate("MainWindow", "Bowlers (BOWL)"))
        self.lbl4.setText(_translate("MainWindow", "Allrounders (AR)"))
        self.lbl5.setText(_translate("MainWindow", "Wicket-Keeper (WK)"))
        self.lbl6.setText(_translate("MainWindow", "Points Available"))
        self.lbl7.setText(_translate("MainWindow", "Points Used"))
        self.rbtn1.setText(_translate("MainWindow", "BAT"))
        self.rbtn2.setText(_translate("MainWindow", "BOWL"))
        self.rbtn3.setText(_translate("MainWindow", "AR"))
        self.rbtn4.setText(_translate("MainWindow", "WK"))
        self.lbl8.setText(_translate("MainWindow", "Team Name"))
        self.menuManage_Teams.setTitle(_translate("MainWindow", "Manage Teams"))
        self.actionNew_Team.setText(_translate("MainWindow", "New Team"))
        self.actionNew_Team.setShortcut(_translate("MainWindow", "Ctrl+N"))
        self.actionOpen_Team.setText(_translate("MainWindow", "Open Team"))
        self.actionOpen_Team.setShortcut(_translate("MainWindow", "Ctrl+O"))
        self.actionSave_Team.setText(_translate("MainWindow", "Save Team"))
        self.actionSave_Team.setShortcut(_translate("MainWindow", "Ctrl+S"))
        self.actionExit.setText(_translate("MainWindow", "Exit"))
        self.actionEvaluate_Team.setText(_translate("MainWindow", "Evaluate Team"))
        self.actionEvaluate_Team.setShortcut(_translate("MainWindow", "Ctrl+E"))

    def menuactn(self, action):
        txt = (action.text())
        if txt == 'New Team':
            self.bat = 0
            self.bowl = 0
            self.ar = 0
            self.wk = 0
            self.avl = 1000
            self.spent = 0
            self.list1.clear()
            self.list2.clear()
            text, ok = QtWidgets.QInputDialog.getText(MainWindow, "Team Name", "Enter your team's name:")
            if ok == True:
                self.le7.setText(str(text))
                self.showrbtn()
            self.show()

        if txt == 'Save Team':
            count = self.list2.count()
            plrs = ""
            for i in range(count):
                plrs += self.list2.item(i).text()
                if i < count - 1:
                    plrs = plrs + ","
            self.saveteam(self.le7.text(), plrs, self.spent)

        if txt == 'Open Team':
            self.bat = 0
            self.bowl = 0
            self.ar = 0
            self.wk = 0
            self.avl = 1000
            self.spent = 0
            self.list1.clear()
            self.list2.clear()
            self.show()
            self.openteam()

        if txt == 'Evaluate Team':
            from calc_dialog import Ui_Dialog
            dlg = QtWidgets.QDialog()
            ui = Ui_Dialog()
            ui.setupUi(dlg)
            exc = dlg.exec()

    def show(self):
        self.le1.setText(str(self.bat))
        self.le2.setText(str(self.bowl))
        self.le3.setText(str(self.ar))
        self.le4.setText(str(self.wk))
        self.le5.setText(str(self.avl))
        self.le6.setText(str(self.spent))

    def rlist1(self, item):
        global ctgry
        if self.rbtn1.isChecked() == True:
            ctgry = 'BAT'
        if self.rbtn2.isChecked() == True:
            ctgry = 'BOWL'
        if self.rbtn3.isChecked() == True:
            ctgry = 'AR'
        if self.rbtn4.isChecked() == True:
            ctgry = 'WK'

        rls = self.rules(ctgry, item)

        if rls == True:
            self.list1.takeItem(self.list1.row(item))
            self.list2.addItem(item.text())
            self.show()

    def rules(self, ctgry, item):
        if ctgry == 'BAT' and self.bat >= 5:
            self.showpopup("Batsmen Limit Reached", "Can't have more than 5 batsmen")
            return False

        if ctgry == 'BOWL' and self.bowl >= 5:
            self.showpopup("Bowlers Limit Reached", "Can't have more than 5 bowlers")
            return False

        if ctgry == 'AR' and self.ar >= 3:
            self.showpopup("Allrounders Limit Reached", "Can't have more than 3 allrounders")
            return False

        if ctgry == 'WK' and self.wk >= 1:
            self.showpopup("Wicket-Keeper Limit Reached", "Can't have more than 1 wicket-keeper")
            return False

        if self.avl <= 0:
            self.showpopup("Total Points Exhausted", "Can't have more than 1000 points. Select Precisely!!")
            return False

        if ctgry == 'BAT':
            self.bat += 1
        if ctgry == 'BOWL':
            self.bowl += 1
        if ctgry == 'AR':
            self.ar += 1
        if ctgry == 'WK':
            self.wk += 1

        sql = "SELECT Value from stats where Player='" + item.text() + "'"
        exc = cts.execute(sql)
        row = exc.fetchone()
        self.avl -= int(row[0])
        self.spent += int(row[0])
        return True

    def ctgr(self):
        global ctgry
        if self.rbtn1.isChecked() == True:
            ctgry = 'BAT'
        if self.rbtn2.isChecked() == True:
            ctgry = 'BOWL'
        if self.rbtn3.isChecked() == True:
            ctgry = 'AR'
        if self.rbtn4.isChecked() == True:
            ctgry = 'WK'
        self.showlist(ctgry)

    def rlist2(self, item):
        self.list2.takeItem(self.list2.row(item))

        sql = "SELECT Value, Category FROM stats WHERE Player='" + item.text() + "'"
        exc = cts.execute(sql)
        row = exc.fetchone()
        self.avl = self.avl + int(row[0])
        self.spent = self.spent - int(row[0])
        ctgry = row[1]
        if ctgry == "BAT":
            self.bat -= 1
            if self.rbtn1.isChecked() == True:
                self.list1.addItem(item.text())
        if ctgry == "BOWL":
            self.bowl -= 1
            if self.rbtn2.isChecked() == True:
                self.list1.addItem(item.text())
        if ctgry == "AR":
            self.ar -= 1
            if self.rbtn3.isChecked() == True:
                self.list1.addItem(item.text())
        if ctgry == "WK":
            self.wk -= 1
            if self.rbtn4.isChecked() == True:
                self.list1.addItem(item.text())
        self.show()

    def showlist(self, ctgry):
        if self.le7.text() == '':
            self.showpopup("No Team Selected", "First Open a Team")
            return
        self.list1.clear()
        sql = "SELECT Player FROM stats WHERE Category='" + ctgry + "'"
        exc = cts.execute(sql)
        for row in exc:
            plrs = []
            for i in range(self.list2.count()):
                plrs.append(self.list2.item(i).text())
            if row[0] not in plrs:
                self.list1.addItem(row[0])

    def openteam(self):
        global row
        sql = "SELECT Name FROM teams"
        exc = cts.execute(sql)
        teams = []
        for row in exc:
            teams.append(row[0])
        team, ok = QtWidgets.QInputDialog.getItem(MainWindow, "Team Selector", "Choose Your Team", teams, 0, False)
        if ok and team:
            self.le7.setText(team)
            self.showrbtn()
        sql2 = "SELECT Players, Value FROM teams WHERE Name='" + team + "'"
        exc = cts.execute(sql2)
        rec = exc.fetchone()
        plrs = rec[0].split(',')
        self.list2.addItems(plrs)
        self.spent = rec[1]
        self.avl = 1000 - rec[1]
        cnt = self.list2.count()

        for i in range(cnt):
            plr = self.list2.item(i).text()
            sql = "SELECT Category FROM stats WHERE Player='" + plr + "'"
            exc = cts.execute(sql)
            rec = exc.fetchone()
            ctgry = rec[0]
            if ctgry == 'BAT':
                self.bat += 1
            if ctgry == 'BOWL':
                self.bowl += 1
            if ctgry == 'AR':
                self.ar += 1
            if ctgry == 'WK':
                self.wk += 1
            self.show()

    def saveteam(self, nm, plr, val):
        if self.bat + self.bowl + self.ar + self.wk != 11:
            self.showpopup("Recheck amount of players", "Need exactly 11 Players.. No More, No Less!! ")
            return
        if self.avl < 0:
            self.showpopup("Used more than 1000 points", "Available points must be greater than or equal to 0")
            return
        sql = "INSERT INTO teams(Name, Players, Value) VALUES('" + nm + "','" + plr + "','" + str(val) + "')"
        try:
            exc = cts.execute(sql)
            cts.commit()
            self.showpopup("Successful", "Team Saved Successfully")
        except:
            self.showpopup("Error", "Error doing Operation")
            cts.rollback()

    def showrbtn(self):
        self.rbtn1.setHidden(False)
        self.rbtn2.setHidden(False)
        self.rbtn3.setHidden(False)
        self.rbtn4.setHidden(False)

    def showpopup(self, window, txt):
        msg = QtWidgets.QMessageBox()
        msg.setWindowTitle(window)
        msg.setText(txt)
        x = msg.exec()


if __name__ == "__main__":
    import sqlite3

    cts = sqlite3.connect("Fantasy_cricket.db")
    import sys

    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
